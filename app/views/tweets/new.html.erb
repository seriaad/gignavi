<div class="all_container">
<div class="big_container">
  <%= form_with(model: @tweet, local: true) do |f| %>
  <div class="detail_container">
    <div class="new_title">
     <h3>新規投稿ページ</h3>
    </div>

      <div class="field">
        <%= f.label :ライブ会場 %>
        <%= f.text_field :live_name, :size => 30 %>
      </div>

      <div class="field">
        <%= f.label :お店の名前（住所検索から自動入力されるため、入力不要） %>
        <%= f.text_field :shop_name, :size => 30 %>
      </div>

     <h5>総合評価</h5>
         <div class="post_form">
            <%= f.radio_button :overall, 5 ,id: 'star1'%>
            <label for="star1"><span class="text">最高</span>★</label>
    
            <%= f.radio_button :overall, 4 ,id: 'star2'%>
            <label for="star2"><span class="text">良い</span>★</label>
    
            <%= f.radio_button :overall, 3 ,id: 'star3'%>
            <label for="star3"><span class="text">普通</span>★</label>
    
            <%= f.radio_button :overall, 2 ,id: 'star4'%>
            <label for="star4"><span class="text">悪い</span>★</label>
    
            <%= f.radio_button :overall, 1 ,id: 'star5'%>
            <label for="star5"><span class="text">最悪</span>★</label>
         </div>

      <div class="field">
        <%= f.label :お店の種類  %>
        <%= f.select :shop_type, 
        [["ランチ", "ランチ"], 
        ["ディナー", "ディナー"], 
        ["カフェ", "カフェ"], 
        ["カラオケ", "カラオケ"],
        ["その他", "その他"]],  include_blank: "選択して下さい" %>
      </div>


      <div class="field">
        <%= f.label :レビュー  %>
        <br>
        <%= f.text_area :review, :size => "50x10" %>
      </div>

      <div class="field">
        <%= f.label :画像 %>
        <%= f.file_field :image %>
      </div>

      <div class="field">
       <%= f.hidden_field :lat, id: :lat %>
      </div>
      <div class="field">
       <%= f.hidden_field :lng, id: :lng %>
      </div>
      
  

     <div class="new_map">
      <h2>Map</h2>
     </div>
  </div>

  <div class="search-map">
    <input id="address" type="textbox" value="東京都庁">
    <input id="search-btn" type="button" value="検索" onclick="codeAddress()">
  </div>
    <p>マーカーをドラック＆ドロップで位置の調整ができます。<p>
    <div id="results"></div>
    <div id="map"></div>

    <style>
    #map {
      height: 600px;
      width: 600px;
    }
    </style>

    <script>


    //初期マップの設定
    let map;
    let marker;
    let geocoder; // 住所から緯度経度を検索するためのサービス
    let service; // Places APIサービス
    function initFormMap(lat = null, lng = null){
      const mapEl = document.getElementById('map');
      if (!mapEl) return;

      let center;
      if (lat && lng) {
        // 編集ページ（既存データあり）
       center = { lat: parseFloat(lat), lng: parseFloat(lng) };
      } else {
       // 新規投稿ページ（デフォルトは東京）
       center = { lat: 35.6803997, lng: 139.7690174 };
      }

      map = new google.maps.Map(mapEl, {
      center: center,
      zoom: 15
      });

      service = new google.maps.places.PlacesService(map);
      geocoder = new google.maps.Geocoder();

      if (lat && lng) {
      // すでにピンがある場合（編集ページ）
      marker = new google.maps.Marker({
      map: map,
      position: center,
      draggable: true
     });

      // ピンを動かしたらDB更新用のフォームに反映
      google.maps.event.addListener(marker, 'dragend', function(ev){
      document.getElementById('lat').value = ev.latLng.lat();
      document.getElementById('lng').value = ev.latLng.lng();
     });
   }
}
     // 住所検索
function codeAddress() {
  const inputAddress = document.getElementById('address').value;

  const request = { query: inputAddress };
  service.textSearch(request, function(results, status) {
    if (status === google.maps.places.PlacesServiceStatus.OK) {
      displayResults(results);
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });
}

// 検索結果をリスト表示
function displayResults(results) {
  const resultsDiv = document.getElementById('results');
  resultsDiv.innerHTML = '';

  results.forEach((result) => {
    const name = result.name;
    const address = result.formatted_address;
    const lat = result.geometry.location.lat();
    const lng = result.geometry.location.lng();

    const li = document.createElement('li');
    li.textContent = `${name} (${address}) - 緯度: ${lat}, 経度: ${lng}`;

    li.onclick = function() {
      if (marker) marker.setMap(null);

      const latLng = result.geometry.location;
      marker = new google.maps.Marker({
        map: map,
        position: latLng,
        draggable: true
      });
      map.setCenter(latLng);

      document.getElementById('lat').value = latLng.lat();
      document.getElementById('lng').value = latLng.lng();
      document.getElementById('tweet_shop_name').value = result.name;

      google.maps.event.addListener(marker, 'dragend', function(ev) {
        document.getElementById('lat').value = ev.latLng.lat();
        document.getElementById('lng').value = ev.latLng.lng();
      });
    };
    resultsDiv.appendChild(li);
  });
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>&callback=initMapWrapper&libraries=places" async defer></script>

<script>
  // Google Maps の callback で呼ばれるラッパー
  function initMapWrapper() {
    initFormMap(<%= @tweet.lat || 'null' %>, <%= @tweet.lng || 'null' %>);
  }
</script>
      <%= f.submit "投稿する" %>
   <% end %>
    <br>
    <br>
    <%= link_to "一覧に戻る", tweets_path %>

</div>
</div>